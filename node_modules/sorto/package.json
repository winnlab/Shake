{
  "name": "sorto",
  "version": "0.0.2",
  "description": "Node.js - sorto ================",
  "repository": {
    "type": "git",
    "url": "git@github.com:jprichardson/node-sorto.git"
  },
  "keywords": [
    "sort",
    "object",
    "array",
    "collection",
    "key",
    "keys",
    "value",
    "values"
  ],
  "author": {
    "name": "JP Richardson",
    "email": "jprichardson@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": ""
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "testutil": "~0.5.0",
    "mocha": "*"
  },
  "main": "./lib/sorto.js",
  "scripts": {
    "test": "mocha test"
  },
  "readme": "\nNode.js - sorto\n================\n\n[![build status](https://secure.travis-ci.org/jprichardson/node-sorto.png)](http://travis-ci.org/jprichardson/node-sorto)\n\nSort an object by key or value.\n\n\nWhy?\n----\n\nWhen I'm crunching through data, I like to keep a count on various strings using an associative array. It's handy to be able to view this data sorted alphabetically or by count.\n\n\n\n\nInstallation\n------------\n\n    npm install --save sorto\n\n\n\nMethods\n-------\n\n### sorto.bykey(collection, [transformFunc])\n\nSorts an object or array of single keyed objects by key.\n\n**Examples:**\n\n```js\nvar sorto = require('sorto')\n\nvar obj = {\n  'b': 'hi',\n  'cat': 'meow',\n  'zoo': 'animals',\n  'jordan': 'basketball',\n  'arthur': 'aardvark',\n  'tim': 'person'\n}\n\nvar items = sorto.bykey(obj)\nEQ (items.length, 6)\n\nEQ (items[0]['arthur'], 'aardvark')\nEQ (items[1]['b'], 'hi')\nEQ (items[2]['cat'], 'meow')\nEQ (items[3]['jordan'], 'basketball')\nEQ (items[4]['tim'], 'person')\nEQ (items[5]['zoo'], 'animals')\n\n\n//use a transform function\nvar obj = {\n  '7': 'hi',\n  '90.5': 'meow',\n  '-5': 'animals',\n  '33.2': 'basketball',\n  '0': 'aardvark',\n  '4': 'person'\n}\n\nvar items = sorto.bykey(obj, parseFloat)\nEQ (items.length, 6)\n\nEQ (items[0]['-5'], 'animals')\nEQ (items[1]['0'], 'aardvark')\nEQ (items[2]['4'], 'person')\nEQ (items[3]['7'], 'hi')\nEQ (items[4]['33.2'], 'basketball')\nEQ (items[5]['90.5'], 'meow')\n```\n\n\n### sorto.byval(collection, [transformFunc])\n\nSorts an object or array of single keyed objects by value.\n\n**Examples:**\n\n```js\nvar sorto = require('sorto')\n\nvar obj = {\n  'b': 'hi',\n  'cat': 'meow',\n  'zoo': 'animals',\n  'jordan': 'basketball',\n  'arthur': 'aardvark',\n  'tim': 'person'\n}\n\nvar items = sorto.byval(obj)\nEQ (items.length, 6)\n\nEQ (items[0]['arthur'], 'aardvark')\nEQ (items[1]['zoo'], 'animals')\nEQ (items[2]['jordan'], 'basketball')\nEQ (items[3]['b'], 'hi')\nEQ (items[4]['cat'], 'meow')\nEQ (items[5]['tim'], 'person')\n\n//use transform function\nvar obj = {\n  'b': '7',\n  'cat': '90.5',\n  'zoo': '-5',\n  'jordan': '33.2',\n  'arthur': '0',\n  'tim': '4'\n}\n\nvar items = sorto.byval(obj, parseFloat)\nEQ (items.length, 6)\nconsole.dir(items)\n\nEQ (items[0]['zoo'], '-5')\nEQ (items[1]['arthur'], '0')\nEQ (items[2]['tim'], '4')\nEQ (items[3]['b'], '7')\nEQ (items[4]['jordan'], '33.2')\nEQ (items[5]['cat'], '90.5')\n```\n\n### Utility Methods\n\nSince `sorto` returns an array of objects with a single/key value pair, it can be kind of annoying accessing those values if you don't know\ntheir names.\n\n\n### k(obj)\n\nGet the key of an object with a single key/value pair.\n\n**Example:**\n\n```js\nvar obj = {name: 'jp'}\nEQ (sorto.k(obj), 'name')\n```\n\n\n### v(obj)\n\nGet the value of an object with a single key/value pair.\n\n**Example:**\n\n```js\nvar obj = {name: 'jp'}\nEQ (sorto.v(obj), 'jp')\n```\n\n\nLicense\n-------\n\n(MIT License)\n\nCopyright 2013 JP Richardson  <jprichardson@gmail.com>\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jprichardson/node-sorto/issues"
  },
  "_id": "sorto@0.0.2",
  "dist": {
    "shasum": "e3d10193221d905ba85f09827e697e00274d55e5"
  },
  "_from": "sorto@~0.0.2",
  "_resolved": "https://registry.npmjs.org/sorto/-/sorto-0.0.2.tgz"
}
